// Suleman Itmer
import java.util.Scanner;
public class RestrictedStructures 
{
	public static void main(String[] s)
	{
		Scanner keyboard = new Scanner(System.in);
		
		// my choice for menu
		int choice;
		
		//----------------------------------------------------------------------->
		// putting mainaccount to null
		Account_Itmer mainAccount = null;//new Account_Itmer2();
		Account_Stack  mainAccountStack = new Account_Stack ();
		Account_Queue  mainAccountQueue = new Account_Queue ();
		
		do
		{
		// --------------------------------------------------------------------------->
		// asking user input
			System.out.println("\n" + "1. Stack");
			System.out.println("2. Queue");
			System.out.println("0. Exit");
			choice=keyboard.nextInt();
			  	  
			switch(choice)
			{
		// ------------------------------------------------------------------------------------>
		// Stack case
				case 1:
				{
		// ------------------------------------------------------------------------------------>
		// Enter  3 accounts
					for (int i = 1; i <= 3; i++)
					{
					
		//----------------------------------------------------------------------->
		//new account var
					String firstName;
					String lastName;
					String accountNum;
					double balance;
					double location;
					int accountType;
								
		//----------------------------------------------------------------------->
		//selection of account
		// new account input
					System.out.println("\n" + "Enter first Name: ");
					firstName = keyboard.next();
					System.out.println("Enter last Name: ");
					lastName = keyboard.next();
					System.out.println("Enter your zipcode: ");
					location = keyboard.nextDouble();
					System.out.println("Enter Account Number: ");
					accountNum = keyboard.next();
					System.out.println("Enter Balance: ");
					balance = keyboard.nextDouble();
								
					System.out.println("1. Checking Account" +
									"\n" + "2. Saving Account:");
					accountType=keyboard.nextInt();
					
		//----------------------------------------------------------------------->
		//account type vars and differences
					switch(accountType)
					{
							  
						case 1:
						{
													
							double fee;
													
							System.out.println("Enter Service Fee: ");
							fee = keyboard.nextDouble();
													
							//Checking account condition if under 20 it bring up menu again after displaying insufficient
							mainAccount = new CheckingAccount_Itmer(accountNum,firstName, lastName, location, balance,fee);
							mainAccount.openAccount();
							
							// putting account in the stack
							mainAccountStack.push(mainAccount);
		
							break;
						}
												
						case 2:
						{
													
							double inter;
													
							System.out.println("Enter interest rate: ");
							inter=keyboard.nextDouble();
													
							//Saving account condition
				
							mainAccount = new SavingAccount_Itmer(accountNum, firstName, lastName, location, balance,inter);
							mainAccount.openAccount();	
							
							// putting account in the stack
							mainAccountStack.push(mainAccount);
							break;
						}
						}
					
					}
					// taking the account out
					 mainAccountStack.pop();
					 
					// showing the top account
					 mainAccountStack.FILOpeek();
					 
					// showing the whole stack. 
					 mainAccountStack.showAll();
					break;
				}
		// ------------------------------------------------------------------------------------>
		// first case ended 
				case 2:
				{
		// ------------------------------------------------------------------------------------>
		// Enter  3 accounts
					for (int i = 1; i <= 3; i++)
					{
					
		//----------------------------------------------------------------------->
		//new account var
					String firstName;
					String lastName;
					String accountNum;
					double balance;
					double location;
					int accountType;
								
		//----------------------------------------------------------------------->
		//selection of account
		// new account input
					System.out.println("\n" + "Enter first Name: ");
					firstName = keyboard.next();
					System.out.println("Enter last Name: ");
					lastName = keyboard.next();
					System.out.println("Enter your zipcode: ");
					location = keyboard.nextDouble();
					System.out.println("Enter Account Number: ");
					accountNum = keyboard.next();
					System.out.println("Enter Balance: ");
					balance = keyboard.nextDouble();
								
					System.out.println("1. Checking Account" +
									"\n" + "2. Saving Account:");
					accountType=keyboard.nextInt();
					
		//----------------------------------------------------------------------->
		//account type vars and differences
					switch(accountType)
					{
							  
						case 1:
						{
													
							double fee;
													
							System.out.println("Enter Service Fee: ");
							fee = keyboard.nextDouble();
													
							//Checking account condition if under 20 it bring up menu again after displaying insufficient
							mainAccount = new CheckingAccount_Itmer(accountNum,firstName, lastName, location, balance,fee);
							mainAccount.openAccount();
							
							mainAccountQueue.enque(mainAccount);
		
							break;
						}
												
						case 2:
						{
													
							double inter;
													
							System.out.println("Enter interest rate: ");
							inter=keyboard.nextDouble();
													
							//Saving account condition
				
							mainAccount = new SavingAccount_Itmer(accountNum, firstName, lastName, location, balance,inter);
							mainAccount.openAccount();	
							
							// putting account in the queue
							mainAccountQueue.enque(mainAccount);
							break;
						}
						}
					
					
					}
					// taking the account out
					 mainAccountQueue.deque();
					
					 // displaying the account
					 mainAccountQueue.FIFOpeek();
					 
					 // showing the queue
					 mainAccountQueue.showAll();
					break;	
				}
			}
		}
		
		// exit when 0 is hit
		while(choice!=0); 			
	}
}
